@using Mkt3.Data
@using System.Diagnostics
@inject QuestionService QuestionService;
@if (question == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
           
    <EditForm Model="@question" OnValidSubmit="@HandleValidSubmit">
        <div class="form-fields">
   
             <QuestionPrompt question="question"></QuestionPrompt>
            <div class="form-field">
                <div class="form-field-label" for="lastNameInput">Solution: </div>
                <div class="form-field-control">
                    <RadzenDropDown AllowClear="false" TValue="string" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" 
                                    @bind-Value="solution" AllowFiltering="false" Class="w-100" Data=@types  />
                    
                </div>
            </div>
            <PointsAndGroups question=question TopicID="@TopicID"></PointsAndGroups>
            <div class="form-field">
                <div class="form-field-label" for="lastNameInput"> </div>
                <div class="form-field-control">
                    <button type="submit" class="buttons">Save</button>    
                    <button type="button" class="buttons" @onclick="@(async () => ResetForm())">Cancel</button>
                </div>
                </div>
        </div>
    </EditForm>
   
}

@code {

    [Parameter]
    public Question? question { get; set; }
    
    
    [Parameter]
    public EventCallback onResetClick { get; set; }
    [Parameter]
    public EventCallback onSaveClick { get; set; }
    [Parameter]
    public string id { get; set; }
    [Parameter]
    public string TopicID { get; set; }
    
    

    private List<string> types = new() { "True", "False" };
    private string solution;

    protected override async Task OnInitializedAsync()
    {
        solution = question.Solutions[0] == "True" ? "True" : "False";
        Debug.Write("True/False");
    }
    
    private async Task HandleValidSubmit()
    {
        question.Solutions[0] = solution;
        question.type = "True/False";
        if (await QuestionService.UpdateQuestion(question, Convert.ToInt32(TopicID)))
        {
 

        }
        await onSaveClick.InvokeAsync();
   
    }
    private async Task ResetForm()
    {
        await onResetClick.InvokeAsync();
    }
}