@using Mkt3.Data
@inject QuestionService QuestionService
<h3>QuestionList</h3>


<table class="table table-dark">
    <thead >
    <tr>
        <AuthorizeView>
            <Authorized>
                <th></th>
            </Authorized>
        </AuthorizeView>
        <th>
            <span @onclick="@(async () => await sortAsync("Title"))"><img width="12" src="@imageSortName"/>Title
            </span> </th>
        <th>
            <span @onclick="@(async () => await sortAsync("Type"))"><img width="12" src="@imageSortName"/>Type
            </span> </th>
        <th>
            <span @onclick="@(async () => await sortAsync("Prompt"))">
                <img width="12" src="@imageSortName"/>
                Prompt
            </span> </th>


        <th>
            <span @onclick="@(async () => await sortAsync("Solutions"))">
                <img width="12" src="@imageSortName"/>
                Solutions
            </span> </th>
        <th>
            <span @onclick="@(async () => await sortAsync("Points"))">
                <img width="12" src="@imageSortName"/>
                Points
            </span> </th>
        <th style="width:25px">
                </th>

    </tr>
    </thead>
    <tbody>
    @foreach (var question in questions)
    {
        <tr>
            <AuthorizeView>
                <Authorized>
                    <td><a href="/editRepeater/@question.QuestionID"> <img width="12" src="@imageEditName"/></a></td>
                </Authorized>
            </AuthorizeView>
            <td><a href="/editQuestion/@question.QuestionID">@question.QuestionID</a></td>
            <td>@question.type</td>
            <td>@question.Prompt
                @foreach (var tag in question.ExamTags)
                                 {
                                     <button class="tag">@tag</button><button class="tag-remove">X</button>
                                 }
                </td>
    
            <td>@question.Solutions[0]</td>
            <td>@question.Points</td>
       
            <td><button type="button" class="buttons buttons-red" @onclick="@(async () => await Delete(@question.QuestionID))">Delete</button>   </td>


        </tr>
    }
    </tbody>
</table>

<a href="/editQuestion/" class="buttons">Add</a>    
@code {
    [Parameter] 
    public Question[] questions { get; set; }
    
    [Parameter]
    public EventCallback onDeleteCallBack { get; set; }
    
    private string currentSort =  "RFreq";
    private string currentOrder = "asc";
    private string imageSortName = "images/sort-asc-white.png";
    private string imageEditName = "images/edit-white.png";
    
    private Task sortAsync(string sortData)
    {
        
        if (currentSort == sortData)
        {
            currentOrder = currentOrder == "asc" ? "desc" : "asc";
            imageSortName = "images/sort-" + currentOrder + "-white.png";
        }
        currentSort = sortData;
        
        //questions = questions.AsQueryable().OrderBy(sortData + " "+ currentOrder).ToArray();
        return Task.FromResult(true);
    }

    private void Add()
    {
       
    }

    private async Task Delete(string QuestionID)
    {
        var result = (QuestionService.Delete(QuestionID));
        await onDeleteCallBack.InvokeAsync();

    }

}