@inject NavigationManager Navigation

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Mkt3</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="questionList">
                <span class="oi oi-plus" aria-hidden="true"></span> QuestionEditors
            </NavLink>
        </div>
    </nav>
</div>


<div class="navHeader">
    <img src="images/new.png" width="24px"/>
    <img src="images/folder.png" width="24px"/>
    <img src="images/upload.png" width="24px"/>
    <span style="padding-left: 95px">
        <img src="images/rename.png" width="24px"/>
        <img src="images/delete.png" width="24px"/>       
    </span>
</div>
<div style="padding-top:5px;">
<TreeView Nodes="Items"
          GetChildNodes="@(item => item.Children)"
          HasChildNodes="@(item => item.Children?.Any() == true)"
          TNode="Item"
          SelectedNode="SelectedNode"
          SelectedNodeChanged="onSelectedNodeChanged">
      
    <NodeContent>@context.Text</NodeContent>
</TreeView>
</div>

<a href="/">New Course</a>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    public class Item
    {
        public string Parent { get; set; }
        public string Text { get; set; }
        public IEnumerable<Item> Children { get; set; }
      
    }

    IEnumerable<Item> Items = new[]
    {

        new Item {
            Parent = "",
            Text = "CSCI.320",
            Children = new []
            {
                new Item { Parent="CSCI.320", Text = "Quiz 1" },
                new Item { Parent="CSCI.320",  Text = "Quiz 2" },
                new Item { Parent="CSCI.320",  Text = "Quiz 3" },
                new Item { Parent="CSCI.320",  Text = "Final Exam" }
            }
        },
        new Item { Parent = "", Text = "CSCI.420" },
    };

    IList<Item> ExpandedNodes = new List<Item>();
    Item SelectedNode;


    private void onSelectedNodeChanged(Item item)
    {
        if (item != null)
        {
            StateHasChanged();
            Navigation.NavigateTo("/questionList/" + item.Parent + "/" + item.Text);
        }
    }


  

}